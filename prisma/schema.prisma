// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  SELLER
  MASTER
}

model Company {
  id         String   @id @default(uuid())
  accessCode String   @unique @db.VarChar(6)
  name       String   @db.VarChar(255)
  cnpj       String  @unique @db.VarChar(14)
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  users User[]
}

model User {
  id        String   @id @default(uuid())
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  username  String   @db.VarChar(50)
  email     String   @db.VarChar(255)
  password  String   @db.VarChar(60)
  fullName  String   @db.VarChar(255)
  role      UserRole @default(SELLER)
  isActive  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([companyId, username])
  @@unique([companyId, email])
  PasswordResetToken PasswordResetToken[]
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade) //cascade para caso de deleção
  token     String   @unique @db.VarChar(255)
  code      String   @db.VarChar(6)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
}

